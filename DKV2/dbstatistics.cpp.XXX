
#include "helpersql.h"
#include "dbstatistics.h"

// all contract summary
int dbStatistics::nbrCreditors()
{   // does not count creditors w/o a contract
    return executeSingleValueSql("*", "AnzahlAlleKreditoren").toInt();
}
int dbStatistics::nbrContracts()
{
    return executeSingleValueSql("COUNT(*)", "Verträge").toInt();
}
double dbStatistics::valueContracts()
{
    return executeSingleValueSql("SUM(Wert)", "WertAlleVerträge").toDouble();
}
double dbStatistics::weightedAverageInterest()
{
}
double dbStatistics::averageInterest()
{
    return executeSingleValueSql("AVG(Zinssatz)", "WertAktiveVertraege").toDouble();    
}
// active vs ...
int dbStatistics::nbrCreditorsWithActiveContracts(){}
int dbStatistics::nbrActiveContracts(){}
double dbStatistics::valueActiveContracts(){}
double dbStatistics::weightedAverageInterestActiveContracts()
{
    return executeSingleValueSql("*", "GewichteterMittlererZinsAktiverVerträge").toDouble();
}
double dbStatistics::averageInterestActiveContracts()
{
    
}
// ... inactive
int dbStatistics::nbrCreditorsWithInactiveContracts(){}
int dbStatistics::nbrInactiveContracts(){}
double  dbStatistics::valueInactiveContracts(){}

// active: reinvesting vs. ...
int dbStatistics::nbrNotReinvesting(){}
double dbStatistics::valueNotReinvesting(){}
double dbStatistics::annualInterestPayout(){}
// ... wPayout
int dbStatistics::nbrReinvesting(){}
double dbStatistics::valueReinvesting(){}
double dbStatistics::annualInterestReinvestment(){}
